/**
 * Class for validating API options.
 */
export default class OptionsValidator {
    /**
     * Validates a number parameter
     * @param {Number} value value to validate
     * @param {Number} defaultValue default value for an option
     * @param {String} name option name
     * @returns {Number} validated value
     * @throws {ValidationError} if value is invalid
     */
    validateNumber(value: any, defaultValue: any, name: any): any;
    /**
     * Validates a number parameter to be above zero
     * @param {Number} value value to validate
     * @param {Number} defaultValue default value for an option
     * @param {String} name option name
     * @returns {Number} validated value
     * @throws {ValidationError} if value is invalid
     */
    validateNonZero(value: any, defaultValue: any, name: any): any;
    /**
     * Validates a parameter to be boolean
     * @param {Boolean} value value to validate
     * @param {Boolean} defaultValue default value for an option
     * @param {String} name option name
     * @returns {Boolean} validated value
     * @throws {ValidationError} if value is invalid
     */
    validateBoolean(value: any, defaultValue: any, name: any): any;
}
